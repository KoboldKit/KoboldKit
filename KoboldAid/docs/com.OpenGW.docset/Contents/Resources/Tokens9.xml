<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/OGWEntityIdentity.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/OGWEntityIdentity</TokenIdentifier>
			<Abstract type="html">The identity object contains a uniqueID (a consecutive number) and a reference to the entity&apos;s category.
You can also set type and subType to further classify or identify entities according to your needs.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
            
			
			<NodeRef refid="9"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OGWEntityIdentity/setUniqueID:</TokenIdentifier>
			<Abstract type="html">The entity&apos;s uniqueID. This is a consecutive number that uniquely identifies a specific entity.
The uniqueID will never re-use previously existing IDs. An entity&apos;s pointer can be obtained from its uniqueID
through OGWWorldEntities. Storing an entity&apos;s uniqueID is a safe way to keep a reference to another entity,
though storing the entity&apos;s pointer in a __weak ivar or weak property would work as well.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
			<Declaration>@property (readonly) GWID uniqueID</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s uniqueID. This is a consecutive number that uniquely identifies a specific entity.
The uniqueID will never re-use previously existing IDs. An entity&apos;s pointer can be obtained from its uniqueID
through OGWWorldEntities. Storing an entity&apos;s uniqueID is a safe way to keep a reference to another entity,
though storing the entity&apos;s pointer in a __weak ivar or weak property would work as well.</Abstract></ReturnValue>
			<Anchor>//api/name/uniqueID</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OGWEntityIdentity/uniqueID</TokenIdentifier>
			<Abstract type="html">The entity&apos;s uniqueID. This is a consecutive number that uniquely identifies a specific entity.
The uniqueID will never re-use previously existing IDs. An entity&apos;s pointer can be obtained from its uniqueID
through OGWWorldEntities. Storing an entity&apos;s uniqueID is a safe way to keep a reference to another entity,
though storing the entity&apos;s pointer in a __weak ivar or weak property would work as well.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
			<Declaration>@property (readonly) GWID uniqueID</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s uniqueID. This is a consecutive number that uniquely identifies a specific entity.
The uniqueID will never re-use previously existing IDs. An entity&apos;s pointer can be obtained from its uniqueID
through OGWWorldEntities. Storing an entity&apos;s uniqueID is a safe way to keep a reference to another entity,
though storing the entity&apos;s pointer in a __weak ivar or weak property would work as well.</Abstract></ReturnValue>
			<Anchor>//api/name/uniqueID</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OGWEntityIdentity/uniqueID</TokenIdentifier>
			<Abstract type="html">The entity&apos;s uniqueID. This is a consecutive number that uniquely identifies a specific entity.
The uniqueID will never re-use previously existing IDs. An entity&apos;s pointer can be obtained from its uniqueID
through OGWWorldEntities. Storing an entity&apos;s uniqueID is a safe way to keep a reference to another entity,
though storing the entity&apos;s pointer in a __weak ivar or weak property would work as well.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
			<Declaration>@property (readonly) GWID uniqueID</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s uniqueID. This is a consecutive number that uniquely identifies a specific entity.
The uniqueID will never re-use previously existing IDs. An entity&apos;s pointer can be obtained from its uniqueID
through OGWWorldEntities. Storing an entity&apos;s uniqueID is a safe way to keep a reference to another entity,
though storing the entity&apos;s pointer in a __weak ivar or weak property would work as well.</Abstract></ReturnValue>
			<Anchor>//api/name/uniqueID</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OGWEntityIdentity/setCategory:</TokenIdentifier>
			<Abstract type="html">The entity&apos;s category.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/OGWEntityCategory</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (readonly) const OGWEntityCategory *category</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s category.</Abstract></ReturnValue>
			<Anchor>//api/name/category</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OGWEntityIdentity/category</TokenIdentifier>
			<Abstract type="html">The entity&apos;s category.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/OGWEntityCategory</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (readonly) const OGWEntityCategory *category</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s category.</Abstract></ReturnValue>
			<Anchor>//api/name/category</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OGWEntityIdentity/category</TokenIdentifier>
			<Abstract type="html">The entity&apos;s category.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/OGWEntityCategory</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (readonly) const OGWEntityCategory *category</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s category.</Abstract></ReturnValue>
			<Anchor>//api/name/category</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OGWEntityIdentity/setType:</TokenIdentifier>
			<Abstract type="html">The entity&apos;s type. Can be used to further classify entities according to your needs.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OGWEntityIdentity/subType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property GWEntityType type</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s type. Can be used to further classify entities according to your needs.</Abstract></ReturnValue>
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OGWEntityIdentity/type</TokenIdentifier>
			<Abstract type="html">The entity&apos;s type. Can be used to further classify entities according to your needs.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OGWEntityIdentity/subType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property GWEntityType type</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s type. Can be used to further classify entities according to your needs.</Abstract></ReturnValue>
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OGWEntityIdentity/type</TokenIdentifier>
			<Abstract type="html">The entity&apos;s type. Can be used to further classify entities according to your needs.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OGWEntityIdentity/subType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property GWEntityType type</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s type. Can be used to further classify entities according to your needs.</Abstract></ReturnValue>
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OGWEntityIdentity/setSubType:</TokenIdentifier>
			<Abstract type="html">The entity&apos;s subType. Can be used to further classify entities according to your needs.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OGWEntityIdentity/type</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property GWEntitySubType subType</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s subType. Can be used to further classify entities according to your needs.</Abstract></ReturnValue>
			<Anchor>//api/name/subType</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OGWEntityIdentity/subType</TokenIdentifier>
			<Abstract type="html">The entity&apos;s subType. Can be used to further classify entities according to your needs.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OGWEntityIdentity/type</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property GWEntitySubType subType</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s subType. Can be used to further classify entities according to your needs.</Abstract></ReturnValue>
			<Anchor>//api/name/subType</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OGWEntityIdentity/subType</TokenIdentifier>
			<Abstract type="html">The entity&apos;s subType. Can be used to further classify entities according to your needs.</Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OGWEntityIdentity/type</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property GWEntitySubType subType</Declaration>
			
			<ReturnValue><Abstract type="html">The entity&apos;s subType. Can be used to further classify entities according to your needs.</Abstract></ReturnValue>
			<Anchor>//api/name/subType</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/OGWEntityIdentity/identityWithCategory:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>OGWEntityIdentity.h</DeclaredIn>
			
			<Declaration>+ (id)identityWithCategory:(const OGWEntityCategory *)category</Declaration>
			
			
			<Anchor>//api/name/identityWithCategory:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
        
	</File>
</Tokens>