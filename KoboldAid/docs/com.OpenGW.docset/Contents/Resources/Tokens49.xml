<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/OGWEntityViewDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/OGWEntityViewDelegate</TokenIdentifier>
			<Abstract type="html">Views can implement this protocol to tie their position and rotation with the entity.</Abstract>
			<DeclaredIn>OGWEntity.h</DeclaredIn>
            
			
			<NodeRef refid="49"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/OGWEntityViewDelegate/setPosition:</TokenIdentifier>
			<Abstract type="html">Sent when the entity&apos;s position has changed. Override/swizzle this method in your view class to perform coordinate conversion as needed.</Abstract>
			<DeclaredIn>OGWEntity.h</DeclaredIn>
			
			<Declaration>- (void)setPosition:(GWPoint)position</Declaration>
			<Parameters>
				<Parameter>
					<Name>position</Name>
					<Abstract type="html">The entity&apos;s position in points (world coordinates).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setPosition:</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/OGWEntityViewDelegate/setZRotation:</TokenIdentifier>
			<Abstract type="html">Send when the entity&apos;s rotation has changed. Override/swizzle this method in your view class to perform radian to degrees conversion if needed.</Abstract>
			<DeclaredIn>OGWEntity.h</DeclaredIn>
			
			<Declaration>- (void)setZRotation:(GWFloat)rotation</Declaration>
			<Parameters>
				<Parameter>
					<Name>rotation</Name>
					<Abstract type="html">The entity&apos;s rotation, in radians.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setZRotation:</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/OGWEntityViewDelegate/willRemoveEntity:</TokenIdentifier>
			<Abstract type="html">Sent just before the entity is removed from the world. The view can use this to remove itself, or perform other tasks like playing a particle effect.</Abstract>
			<DeclaredIn>OGWEntity.h</DeclaredIn>
			
			<Declaration>- (void)willRemoveEntity:(OGWEntity *)entity</Declaration>
			<Parameters>
				<Parameter>
					<Name>entity</Name>
					<Abstract type="html">The entity that will be removed. In case the view delegate needs the entity and did not cache it locally.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/willRemoveEntity:</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
        
	</File>
</Tokens>