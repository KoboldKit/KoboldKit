<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/OALAudioSession.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/OALAudioSession</TokenIdentifier>
			<Abstract type="html">Handles the audio session and interrupts.</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
            
			
			<NodeRef refid="16"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/setAudioSessionCategory:</TokenIdentifier>
			<Abstract type="html">The current audio session category.
If this value is explicitly set, the other session properties &quot;allowIpod&quot;,
&quot;useHardwareIfAvailable&quot;, &quot;honorSilentSwitch&quot;, and &quot;ipodDucking&quot; may be modified
to remain compatible with the category.</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, retain) NSString *audioSessionCategory</Declaration>
			
			
			<Anchor>//api/name/audioSessionCategory</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/audioSessionCategory</TokenIdentifier>
			<Abstract type="html">The current audio session category.
If this value is explicitly set, the other session properties &quot;allowIpod&quot;,
&quot;useHardwareIfAvailable&quot;, &quot;honorSilentSwitch&quot;, and &quot;ipodDucking&quot; may be modified
to remain compatible with the category.</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, retain) NSString *audioSessionCategory</Declaration>
			
			
			<Anchor>//api/name/audioSessionCategory</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/audioSessionCategory</TokenIdentifier>
			<Abstract type="html">The current audio session category.
If this value is explicitly set, the other session properties &quot;allowIpod&quot;,
&quot;useHardwareIfAvailable&quot;, &quot;honorSilentSwitch&quot;, and &quot;ipodDucking&quot; may be modified
to remain compatible with the category.</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, retain) NSString *audioSessionCategory</Declaration>
			
			
			<Anchor>//api/name/audioSessionCategory</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/setAllowIpod:</TokenIdentifier>
			<Abstract type="html">If YES, allow ipod music to continue playing (NOT SUPPORTED ON THE SIMULATOR).
Note: If this is enabled, and another app is playing music, background audio
playback will use the SOFTWARE codecs, NOT hardware. &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/useHardwareIfAvailable</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, readwrite, assign) bool allowIpod</Declaration>
			
			
			<Anchor>//api/name/allowIpod</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/allowIpod</TokenIdentifier>
			<Abstract type="html">If YES, allow ipod music to continue playing (NOT SUPPORTED ON THE SIMULATOR).
Note: If this is enabled, and another app is playing music, background audio
playback will use the SOFTWARE codecs, NOT hardware. &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/useHardwareIfAvailable</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, readwrite, assign) bool allowIpod</Declaration>
			
			
			<Anchor>//api/name/allowIpod</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/allowIpod</TokenIdentifier>
			<Abstract type="html">If YES, allow ipod music to continue playing (NOT SUPPORTED ON THE SIMULATOR).
Note: If this is enabled, and another app is playing music, background audio
playback will use the SOFTWARE codecs, NOT hardware. &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/useHardwareIfAvailable</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, readwrite, assign) bool allowIpod</Declaration>
			
			
			<Anchor>//api/name/allowIpod</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/setIpodDucking:</TokenIdentifier>
			<Abstract type="html">If YES, ipod music will duck (lower in volume) when the audio session activates.</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool ipodDucking</Declaration>
			
			
			<Anchor>//api/name/ipodDucking</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/ipodDucking</TokenIdentifier>
			<Abstract type="html">If YES, ipod music will duck (lower in volume) when the audio session activates.</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool ipodDucking</Declaration>
			
			
			<Anchor>//api/name/ipodDucking</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/ipodDucking</TokenIdentifier>
			<Abstract type="html">If YES, ipod music will duck (lower in volume) when the audio session activates.</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool ipodDucking</Declaration>
			
			
			<Anchor>//api/name/ipodDucking</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/setUseHardwareIfAvailable:</TokenIdentifier>
			<Abstract type="html">Determines what to do if no other application is playing audio and allowIpod = YES
(NOT SUPPORTED ON THE SIMULATOR). &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/allowIpod</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, readwrite, assign) bool useHardwareIfAvailable</Declaration>
			
			
			<Anchor>//api/name/useHardwareIfAvailable</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/useHardwareIfAvailable</TokenIdentifier>
			<Abstract type="html">Determines what to do if no other application is playing audio and allowIpod = YES
(NOT SUPPORTED ON THE SIMULATOR). &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/allowIpod</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, readwrite, assign) bool useHardwareIfAvailable</Declaration>
			
			
			<Anchor>//api/name/useHardwareIfAvailable</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/useHardwareIfAvailable</TokenIdentifier>
			<Abstract type="html">Determines what to do if no other application is playing audio and allowIpod = YES
(NOT SUPPORTED ON THE SIMULATOR). &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/allowIpod</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, readwrite, assign) bool useHardwareIfAvailable</Declaration>
			
			
			<Anchor>//api/name/useHardwareIfAvailable</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/setHonorSilentSwitch:</TokenIdentifier>
			<Abstract type="html">If true, mute when backgrounded, screen locked, or the ringer switch is
turned off (NOT SUPPORTED ON THE SIMULATOR). &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool honorSilentSwitch</Declaration>
			
			
			<Anchor>//api/name/honorSilentSwitch</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/honorSilentSwitch</TokenIdentifier>
			<Abstract type="html">If true, mute when backgrounded, screen locked, or the ringer switch is
turned off (NOT SUPPORTED ON THE SIMULATOR). &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool honorSilentSwitch</Declaration>
			
			
			<Anchor>//api/name/honorSilentSwitch</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/honorSilentSwitch</TokenIdentifier>
			<Abstract type="html">If true, mute when backgrounded, screen locked, or the ringer switch is
turned off (NOT SUPPORTED ON THE SIMULATOR). &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool honorSilentSwitch</Declaration>
			
			
			<Anchor>//api/name/honorSilentSwitch</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/setHandleInterruptions:</TokenIdentifier>
			<Abstract type="html">If true, automatically handle interruptions. &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool handleInterruptions</Declaration>
			
			
			<Anchor>//api/name/handleInterruptions</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/handleInterruptions</TokenIdentifier>
			<Abstract type="html">If true, automatically handle interruptions. &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool handleInterruptions</Declaration>
			
			
			<Anchor>//api/name/handleInterruptions</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/handleInterruptions</TokenIdentifier>
			<Abstract type="html">If true, automatically handle interruptions. &lt;br&gt;</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool handleInterruptions</Declaration>
			
			
			<Anchor>//api/name/handleInterruptions</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/setAudioSessionDelegate:</TokenIdentifier>
			<Abstract type="html">Delegate that will receive all audio session events (WEAK reference).</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) id&lt;AVAudioSessionDelegate&gt; audioSessionDelegate</Declaration>
			
			
			<Anchor>//api/name/audioSessionDelegate</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/audioSessionDelegate</TokenIdentifier>
			<Abstract type="html">Delegate that will receive all audio session events (WEAK reference).</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) id&lt;AVAudioSessionDelegate&gt; audioSessionDelegate</Declaration>
			
			
			<Anchor>//api/name/audioSessionDelegate</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/audioSessionDelegate</TokenIdentifier>
			<Abstract type="html">Delegate that will receive all audio session events (WEAK reference).</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) id&lt;AVAudioSessionDelegate&gt; audioSessionDelegate</Declaration>
			
			
			<Anchor>//api/name/audioSessionDelegate</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/setAudioSessionActive:</TokenIdentifier>
			<Abstract type="html">If true, the audio session is active</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool audioSessionActive</Declaration>
			
			
			<Anchor>//api/name/audioSessionActive</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/audioSessionActive</TokenIdentifier>
			<Abstract type="html">If true, the audio session is active</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool audioSessionActive</Declaration>
			
			
			<Anchor>//api/name/audioSessionActive</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/audioSessionActive</TokenIdentifier>
			<Abstract type="html">If true, the audio session is active</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) bool audioSessionActive</Declaration>
			
			
			<Anchor>//api/name/audioSessionActive</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/set:</TokenIdentifier>
			<Abstract type="html">The preferred I/O buffer duration, in seconds. Lower values give less
playback latencey, but use more CPU. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use AVAudioSession instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) float preferredIOBufferDuration __OSX_AVAILABLE_BUT_DEPRECATED ( __MAC_NA , __MAC_NA , __IPHONE_2_0 , __IPHONE_6_1 )</Declaration>
			
			
			<Anchor>//api/name/)</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/)</TokenIdentifier>
			<Abstract type="html">The preferred I/O buffer duration, in seconds. Lower values give less
playback latencey, but use more CPU. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use AVAudioSession instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) float preferredIOBufferDuration __OSX_AVAILABLE_BUT_DEPRECATED ( __MAC_NA , __MAC_NA , __IPHONE_2_0 , __IPHONE_6_1 )</Declaration>
			
			
			<Anchor>//api/name/)</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/OALAudioSession/)</TokenIdentifier>
			<Abstract type="html">The preferred I/O buffer duration, in seconds. Lower values give less
playback latencey, but use more CPU. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Use AVAudioSession instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) float preferredIOBufferDuration __OSX_AVAILABLE_BUT_DEPRECATED ( __MAC_NA , __MAC_NA , __IPHONE_2_0 , __IPHONE_6_1 )</Declaration>
			
			
			<Anchor>//api/name/)</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/OALAudioSession/forceEndInterruption</TokenIdentifier>
			<Abstract type="html">Force an interrupt end. This can be useful in cases where a buggy OS
fails to end an interrupt.</Abstract>
			<DeclaredIn>OALAudioSession.h</DeclaredIn>
			
			<Declaration>- (void)forceEndInterruption</Declaration>
			
			
			<Anchor>//api/name/forceEndInterruption</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
        
	</File>
</Tokens>