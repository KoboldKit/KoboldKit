<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/XMLWriter.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/XMLWriter</TokenIdentifier>
			<Abstract type="html">XMLWriter writes XML files. Mainly used for iOS since there is no built-in XML writer API for iOS. See: https://code.google.com/p/xswi/w/list</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
            
			
			<NodeRef refid="31"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/setIndentation:</TokenIdentifier>
			<Abstract type="html">XML indentation string</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, retain, readwrite) NSString *indentation</Declaration>
			
			<ReturnValue><Abstract type="html">XML indentation string</Abstract></ReturnValue>
			<Anchor>//api/name/indentation</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/indentation</TokenIdentifier>
			<Abstract type="html">XML indentation string</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, retain, readwrite) NSString *indentation</Declaration>
			
			<ReturnValue><Abstract type="html">XML indentation string</Abstract></ReturnValue>
			<Anchor>//api/name/indentation</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/XMLWriter/indentation</TokenIdentifier>
			<Abstract type="html">XML indentation string</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, retain, readwrite) NSString *indentation</Declaration>
			
			<ReturnValue><Abstract type="html">XML indentation string</Abstract></ReturnValue>
			<Anchor>//api/name/indentation</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/setLineBreak:</TokenIdentifier>
			<Abstract type="html">lineBreak string</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, retain, readwrite) NSString *lineBreak</Declaration>
			
			<ReturnValue><Abstract type="html">lineBreak string</Abstract></ReturnValue>
			<Anchor>//api/name/lineBreak</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/lineBreak</TokenIdentifier>
			<Abstract type="html">lineBreak string</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, retain, readwrite) NSString *lineBreak</Declaration>
			
			<ReturnValue><Abstract type="html">lineBreak string</Abstract></ReturnValue>
			<Anchor>//api/name/lineBreak</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/XMLWriter/lineBreak</TokenIdentifier>
			<Abstract type="html">lineBreak string</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, retain, readwrite) NSString *lineBreak</Declaration>
			
			<ReturnValue><Abstract type="html">lineBreak string</Abstract></ReturnValue>
			<Anchor>//api/name/lineBreak</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/setAutomaticEmptyElements:</TokenIdentifier>
			<Abstract type="html">automatic empty elements</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, assign, readwrite) BOOL automaticEmptyElements</Declaration>
			
			<ReturnValue><Abstract type="html">automatic empty elements</Abstract></ReturnValue>
			<Anchor>//api/name/automaticEmptyElements</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/automaticEmptyElements</TokenIdentifier>
			<Abstract type="html">automatic empty elements</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, assign, readwrite) BOOL automaticEmptyElements</Declaration>
			
			<ReturnValue><Abstract type="html">automatic empty elements</Abstract></ReturnValue>
			<Anchor>//api/name/automaticEmptyElements</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/XMLWriter/automaticEmptyElements</TokenIdentifier>
			<Abstract type="html">automatic empty elements</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, assign, readwrite) BOOL automaticEmptyElements</Declaration>
			
			<ReturnValue><Abstract type="html">automatic empty elements</Abstract></ReturnValue>
			<Anchor>//api/name/automaticEmptyElements</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/setLevel:</TokenIdentifier>
			<Abstract type="html">indentation level</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) int level</Declaration>
			
			<ReturnValue><Abstract type="html">indentation level</Abstract></ReturnValue>
			<Anchor>//api/name/level</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/level</TokenIdentifier>
			<Abstract type="html">indentation level</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) int level</Declaration>
			
			<ReturnValue><Abstract type="html">indentation level</Abstract></ReturnValue>
			<Anchor>//api/name/level</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/XMLWriter/level</TokenIdentifier>
			<Abstract type="html">indentation level</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) int level</Declaration>
			
			<ReturnValue><Abstract type="html">indentation level</Abstract></ReturnValue>
			<Anchor>//api/name/level</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/writeLinebreak</TokenIdentifier>
			<Abstract type="html">helpful for formatting, special needs
write linebreak, if any</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>- (void)writeLinebreak</Declaration>
			
			
			<Anchor>//api/name/writeLinebreak</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/writeIndentation</TokenIdentifier>
			<Abstract type="html">write indentation, if any</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>- (void)writeIndentation</Declaration>
			
			
			<Anchor>//api/name/writeIndentation</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/writeCloseStartElement</TokenIdentifier>
			<Abstract type="html">write end of start element, so that the start tag is complete</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>- (void)writeCloseStartElement</Declaration>
			
			
			<Anchor>//api/name/writeCloseStartElement</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/writeNamespaceAttributes</TokenIdentifier>
			<Abstract type="html">write any outstanding namespace declaration attributes in a start element</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>- (void)writeNamespaceAttributes</Declaration>
			
			
			<Anchor>//api/name/writeNamespaceAttributes</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/writeEscape:</TokenIdentifier>
			<Abstract type="html">write escaped text to the stream</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>- (void)writeEscape:(NSString *)value</Declaration>
			<Parameters>
				<Parameter>
					<Name>value</Name>
					<Abstract type="html">The escaped string.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/writeEscape:</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/XMLWriter/write:</TokenIdentifier>
			<Abstract type="html">wrote unescaped text to the stream</Abstract>
			<DeclaredIn>XMLWriter.h</DeclaredIn>
			
			<Declaration>- (void)write:(NSString *)value</Declaration>
			<Parameters>
				<Parameter>
					<Name>value</Name>
					<Abstract type="html">The unescaped string.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/write:</Anchor>
            <NodeRef refid="31"/>
		</Token>
		
        
	</File>
</Tokens>