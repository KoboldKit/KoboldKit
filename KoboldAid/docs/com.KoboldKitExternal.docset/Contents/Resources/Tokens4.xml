<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ALContext.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ALContext</TokenIdentifier>
			<Abstract type="html">A context encompasses a single listener and a series of sources.
A context is created from a device, and many contexts may be created
(though multiple contexts would be unusual in an iOS app).</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setAlVersion:</TokenIdentifier>
			<Abstract type="html">OpenAL version string in format
“[spec major number].[spec minor number] optional [vendor version information]”
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *alVersion</Declaration>
			
			
			<Anchor>//api/name/alVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/alVersion</TokenIdentifier>
			<Abstract type="html">OpenAL version string in format
“[spec major number].[spec minor number] optional [vendor version information]”
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *alVersion</Declaration>
			
			
			<Anchor>//api/name/alVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/alVersion</TokenIdentifier>
			<Abstract type="html">OpenAL version string in format
“[spec major number].[spec minor number] optional [vendor version information]”
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *alVersion</Declaration>
			
			
			<Anchor>//api/name/alVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setAttributes:</TokenIdentifier>
			<Abstract type="html">The current context&apos;s attribute list.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSArray *attributes</Declaration>
			
			
			<Anchor>//api/name/attributes</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/attributes</TokenIdentifier>
			<Abstract type="html">The current context&apos;s attribute list.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSArray *attributes</Declaration>
			
			
			<Anchor>//api/name/attributes</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/attributes</TokenIdentifier>
			<Abstract type="html">The current context&apos;s attribute list.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSArray *attributes</Declaration>
			
			
			<Anchor>//api/name/attributes</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setContext:</TokenIdentifier>
			<Abstract type="html">The OpenAL context pointer.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) ALCcontext *context</Declaration>
			
			
			<Anchor>//api/name/context</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/context</TokenIdentifier>
			<Abstract type="html">The OpenAL context pointer.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) ALCcontext *context</Declaration>
			
			
			<Anchor>//api/name/context</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/context</TokenIdentifier>
			<Abstract type="html">The OpenAL context pointer.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) ALCcontext *context</Declaration>
			
			
			<Anchor>//api/name/context</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setDevice:</TokenIdentifier>
			<Abstract type="html">The device this context was opened on.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) ALDevice *device</Declaration>
			
			
			<Anchor>//api/name/device</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/device</TokenIdentifier>
			<Abstract type="html">The device this context was opened on.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) ALDevice *device</Declaration>
			
			
			<Anchor>//api/name/device</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/device</TokenIdentifier>
			<Abstract type="html">The device this context was opened on.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) ALDevice *device</Declaration>
			
			
			<Anchor>//api/name/device</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setDistanceModel:</TokenIdentifier>
			<Abstract type="html">The current distance model.
Legal values are ALNONE, ALINVERSEDISTANCE, ALINVERSEDISTANCECLAMPED,
ALLINEARDISTANCE, ALLINEARDISTANCECLAMPED, ALEXPONENT_DISTANCE,
and ALEXPONENTDISTANCE_CLAMPED. See the OpenAL spec for detailed information.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) ALenum distanceModel</Declaration>
			
			
			<Anchor>//api/name/distanceModel</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/distanceModel</TokenIdentifier>
			<Abstract type="html">The current distance model.
Legal values are ALNONE, ALINVERSEDISTANCE, ALINVERSEDISTANCECLAMPED,
ALLINEARDISTANCE, ALLINEARDISTANCECLAMPED, ALEXPONENT_DISTANCE,
and ALEXPONENTDISTANCE_CLAMPED. See the OpenAL spec for detailed information.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) ALenum distanceModel</Declaration>
			
			
			<Anchor>//api/name/distanceModel</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/distanceModel</TokenIdentifier>
			<Abstract type="html">The current distance model.
Legal values are ALNONE, ALINVERSEDISTANCE, ALINVERSEDISTANCECLAMPED,
ALLINEARDISTANCE, ALLINEARDISTANCECLAMPED, ALEXPONENT_DISTANCE,
and ALEXPONENTDISTANCE_CLAMPED. See the OpenAL spec for detailed information.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) ALenum distanceModel</Declaration>
			
			
			<Anchor>//api/name/distanceModel</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setDopplerFactor:</TokenIdentifier>
			<Abstract type="html">Exaggeration factor for Doppler effect.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) float dopplerFactor</Declaration>
			
			
			<Anchor>//api/name/dopplerFactor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/dopplerFactor</TokenIdentifier>
			<Abstract type="html">Exaggeration factor for Doppler effect.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) float dopplerFactor</Declaration>
			
			
			<Anchor>//api/name/dopplerFactor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/dopplerFactor</TokenIdentifier>
			<Abstract type="html">Exaggeration factor for Doppler effect.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) float dopplerFactor</Declaration>
			
			
			<Anchor>//api/name/dopplerFactor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setExtensions:</TokenIdentifier>
			<Abstract type="html">List of available extensions (NSString*).
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSArray *extensions</Declaration>
			
			
			<Anchor>//api/name/extensions</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/extensions</TokenIdentifier>
			<Abstract type="html">List of available extensions (NSString*).
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSArray *extensions</Declaration>
			
			
			<Anchor>//api/name/extensions</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/extensions</TokenIdentifier>
			<Abstract type="html">List of available extensions (NSString*).
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSArray *extensions</Declaration>
			
			
			<Anchor>//api/name/extensions</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setListener:</TokenIdentifier>
			<Abstract type="html">This context&apos;s listener.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) ALListener *listener</Declaration>
			
			
			<Anchor>//api/name/listener</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/listener</TokenIdentifier>
			<Abstract type="html">This context&apos;s listener.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) ALListener *listener</Declaration>
			
			
			<Anchor>//api/name/listener</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/listener</TokenIdentifier>
			<Abstract type="html">This context&apos;s listener.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) ALListener *listener</Declaration>
			
			
			<Anchor>//api/name/listener</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setRenderer:</TokenIdentifier>
			<Abstract type="html">Information about the specific renderer.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *renderer</Declaration>
			
			
			<Anchor>//api/name/renderer</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/renderer</TokenIdentifier>
			<Abstract type="html">Information about the specific renderer.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *renderer</Declaration>
			
			
			<Anchor>//api/name/renderer</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/renderer</TokenIdentifier>
			<Abstract type="html">Information about the specific renderer.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *renderer</Declaration>
			
			
			<Anchor>//api/name/renderer</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setSources:</TokenIdentifier>
			<Abstract type="html">All sources associated with this context (ALSource*).</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSArray *sources</Declaration>
			
			
			<Anchor>//api/name/sources</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/sources</TokenIdentifier>
			<Abstract type="html">All sources associated with this context (ALSource*).</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSArray *sources</Declaration>
			
			
			<Anchor>//api/name/sources</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/sources</TokenIdentifier>
			<Abstract type="html">All sources associated with this context (ALSource*).</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSArray *sources</Declaration>
			
			
			<Anchor>//api/name/sources</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setSpeedOfSound:</TokenIdentifier>
			<Abstract type="html">Speed of sound in same units as velocities.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) float speedOfSound</Declaration>
			
			
			<Anchor>//api/name/speedOfSound</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/speedOfSound</TokenIdentifier>
			<Abstract type="html">Speed of sound in same units as velocities.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) float speedOfSound</Declaration>
			
			
			<Anchor>//api/name/speedOfSound</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/speedOfSound</TokenIdentifier>
			<Abstract type="html">Speed of sound in same units as velocities.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, assign) float speedOfSound</Declaration>
			
			
			<Anchor>//api/name/speedOfSound</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/setVendor:</TokenIdentifier>
			<Abstract type="html">Name of the vendor.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *vendor</Declaration>
			
			
			<Anchor>//api/name/vendor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/vendor</TokenIdentifier>
			<Abstract type="html">Name of the vendor.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *vendor</Declaration>
			
			
			<Anchor>//api/name/vendor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALContext/vendor</TokenIdentifier>
			<Abstract type="html">Name of the vendor.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *vendor</Declaration>
			
			
			<Anchor>//api/name/vendor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ALContext/contextOnDevice:attributes:</TokenIdentifier>
			<Abstract type="html">Create a new context on the specified device.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>+ (id)contextOnDevice:(ALDevice *)device attributes:(NSArray *)attributes</Declaration>
			<Parameters>
				<Parameter>
					<Name>device</Name>
					<Abstract type="html">The device to open the context on.</Abstract>
				</Parameter><Parameter>
					<Name>attributes</Name>
					<Abstract type="html">An array of NSNumber in ordered pairs (attribute id followed by integer value).
Posible attributes: ALCFREQUENCY, ALCREFRESH, ALCSYNC, ALCMONOSOURCES, ALCSTEREO_SOURCES</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new context.</Abstract></ReturnValue>
			<Anchor>//api/name/contextOnDevice:attributes:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ALContext/contextOnDevice:outputFrequency:refreshIntervals:synchronousContext:monoSources:stereoSources:</TokenIdentifier>
			<Abstract type="html">Create a new context on the specified device with attributes.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>+ (id)contextOnDevice:(ALDevice *)device outputFrequency:(int)outputFrequency refreshIntervals:(int)refreshIntervals synchronousContext:(bool)synchronousContext monoSources:(int)monoSources stereoSources:(int)stereoSources</Declaration>
			<Parameters>
				<Parameter>
					<Name>device</Name>
					<Abstract type="html">The device to open the context on.</Abstract>
				</Parameter><Parameter>
					<Name>outputFrequency</Name>
					<Abstract type="html">The frequency to mix all sources to before outputting (ignored by iOS).</Abstract>
				</Parameter><Parameter>
					<Name>refreshIntervals</Name>
					<Abstract type="html">The number of passes per second used to mix the audio sources.
For games this can be 5-15. For audio intensive apps, it should be higher (ignored by iOS).</Abstract>
				</Parameter><Parameter>
					<Name>synchronousContext</Name>
					<Abstract type="html">If true, this context runs on the main thread and depends on you
calling alcUpdateContext (ignored by iOS).</Abstract>
				</Parameter><Parameter>
					<Name>monoSources</Name>
					<Abstract type="html">A hint indicating how many sources should support mono (default 28 on iOS).</Abstract>
				</Parameter><Parameter>
					<Name>stereoSources</Name>
					<Abstract type="html">A hint indicating how many sources should support stereo (default 4 on iOS).</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new context.</Abstract></ReturnValue>
			<Anchor>//api/name/contextOnDevice:outputFrequency:refreshIntervals:synchronousContext:monoSources:stereoSources:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/initOnDevice:outputFrequency:refreshIntervals:synchronousContext:monoSources:stereoSources:</TokenIdentifier>
			<Abstract type="html">Initialize this context on the specified device with attributes.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>- (id)initOnDevice:(ALDevice *)device outputFrequency:(int)outputFrequency refreshIntervals:(int)refreshIntervals synchronousContext:(bool)synchronousContext monoSources:(int)monoSources stereoSources:(int)stereoSources</Declaration>
			<Parameters>
				<Parameter>
					<Name>device</Name>
					<Abstract type="html">The device to open the context on.</Abstract>
				</Parameter><Parameter>
					<Name>outputFrequency</Name>
					<Abstract type="html">The frequency to mix all sources to before outputting (ignored by iOS).</Abstract>
				</Parameter><Parameter>
					<Name>refreshIntervals</Name>
					<Abstract type="html">The number of passes per second used to mix the audio sources.
For games this can be 5-15. For audio intensive apps, it should be higher (ignored by iOS).</Abstract>
				</Parameter><Parameter>
					<Name>synchronousContext</Name>
					<Abstract type="html">If true, this context runs on the main thread and depends on you
calling alcUpdateContext (ignored by iOS).</Abstract>
				</Parameter><Parameter>
					<Name>monoSources</Name>
					<Abstract type="html">A hint indicating how many sources should support mono (default 28 on iOS).</Abstract>
				</Parameter><Parameter>
					<Name>stereoSources</Name>
					<Abstract type="html">A hint indicating how many sources should support stereo (default 4 on iOS).</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized context.</Abstract></ReturnValue>
			<Anchor>//api/name/initOnDevice:outputFrequency:refreshIntervals:synchronousContext:monoSources:stereoSources:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/initOnDevice:attributes:</TokenIdentifier>
			<Abstract type="html">Initialize this context for the specified device and attributes.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>- (id)initOnDevice:(ALDevice *)device attributes:(NSArray *)attributes</Declaration>
			<Parameters>
				<Parameter>
					<Name>device</Name>
					<Abstract type="html">The device to open the context on.</Abstract>
				</Parameter><Parameter>
					<Name>attributes</Name>
					<Abstract type="html">An array of NSNumber in ordered pairs (attribute id followed by integer value).
Posible attributes: ALCFREQUENCY, ALCREFRESH, ALCSYNC, ALCMONOSOURCES, ALCSTEREO_SOURCES</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The initialized context.</Abstract></ReturnValue>
			<Anchor>//api/name/initOnDevice:attributes:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/process</TokenIdentifier>
			<Abstract type="html">Process this context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>- (void)process</Declaration>
			
			
			<Anchor>//api/name/process</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/stopAllSounds</TokenIdentifier>
			<Abstract type="html">Stop all sound sources in this context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>- (void)stopAllSounds</Declaration>
			
			
			<Anchor>//api/name/stopAllSounds</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/clearBuffers</TokenIdentifier>
			<Abstract type="html">Clear all buffers being used by sources in this context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>- (void)clearBuffers</Declaration>
			
			
			<Anchor>//api/name/clearBuffers</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/ensureContextIsCurrent</TokenIdentifier>
			<Abstract type="html">Make sure this context is the current context.
This method is used to work around iOS 4.0 and 4.2 bugs
that could cause the context to be lost.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>- (void)ensureContextIsCurrent</Declaration>
			
			
			<Anchor>//api/name/ensureContextIsCurrent</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/isExtensionPresent:</TokenIdentifier>
			<Abstract type="html">Check if the specified extension is present in this context.
Only valid when this is the current context.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>- (bool)isExtensionPresent:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the extension to check.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">TRUE if the extension is present in this context.</Abstract></ReturnValue>
			<Anchor>//api/name/isExtensionPresent:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/getProcAddress:</TokenIdentifier>
			<Abstract type="html">Get the address of the specified procedure (C function address).
Only valid when this is the current context.
&lt;strong&gt;Note:&lt;/strong&gt; The OpenAL implementation is free to return
a pointer even if it is not valid for this context. Always call isExtensionPresent
first.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>- (void *)getProcAddress:(NSString *)functionName</Declaration>
			<Parameters>
				<Parameter>
					<Name>functionName</Name>
					<Abstract type="html">the name of the procedure to get.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the procedure&apos;s address, or NULL if it wasn&apos;t found.</Abstract></ReturnValue>
			<Anchor>//api/name/getProcAddress:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/notifySourceInitializing:</TokenIdentifier>
			<Abstract type="html">(INTERNAL USE) Used by ALSource to announce initialization.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>- (void)notifySourceInitializing:(ALSource *)source</Declaration>
			<Parameters>
				<Parameter>
					<Name>source</Name>
					<Abstract type="html">the source that is initializing.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/notifySourceInitializing:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALContext/notifySourceDeallocating:</TokenIdentifier>
			<Abstract type="html">(INTERNAL USE) Used by ALSource to announce deallocation.</Abstract>
			<DeclaredIn>ALContext.h</DeclaredIn>
			
			<Declaration>- (void)notifySourceDeallocating:(ALSource *)source</Declaration>
			<Parameters>
				<Parameter>
					<Name>source</Name>
					<Abstract type="html">the source that is deallocating.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/notifySourceDeallocating:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
	</File>
</Tokens>