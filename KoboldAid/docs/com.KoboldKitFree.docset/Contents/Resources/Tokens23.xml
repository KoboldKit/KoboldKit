<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/KKNodeController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/KKNodeController</TokenIdentifier>
			<Abstract type="html">KKNodeController adds game component (behavior, model functionality to a node.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
            
			
			<NodeRef refid="23"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/setNode:</TokenIdentifier>
			<Abstract type="html">The controller&apos;s owning node. You should never change this reference yourself!</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic, weak) SKNode *node</Declaration>
			
			<ReturnValue><Abstract type="html">The controller&apos;s owning node. You should never change this reference yourself!</Abstract></ReturnValue>
			<Anchor>//api/name/node</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/node</TokenIdentifier>
			<Abstract type="html">The controller&apos;s owning node. You should never change this reference yourself!</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic, weak) SKNode *node</Declaration>
			
			<ReturnValue><Abstract type="html">The controller&apos;s owning node. You should never change this reference yourself!</Abstract></ReturnValue>
			<Anchor>//api/name/node</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKNodeController/node</TokenIdentifier>
			<Abstract type="html">The controller&apos;s owning node. You should never change this reference yourself!</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic, weak) SKNode *node</Declaration>
			
			<ReturnValue><Abstract type="html">The controller&apos;s owning node. You should never change this reference yourself!</Abstract></ReturnValue>
			<Anchor>//api/name/node</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/setUserData:</TokenIdentifier>
			<Abstract type="html">The controller&apos;s userData supercedes the node&apos;s userData and can be used in the same way. You should never change this reference yourself!</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic, strong) NSMutableDictionary *userData</Declaration>
			
			<ReturnValue><Abstract type="html">The controller&apos;s userData supercedes the node&apos;s userData and can be used in the same way. You should never change this reference yourself!</Abstract></ReturnValue>
			<Anchor>//api/name/userData</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/userData</TokenIdentifier>
			<Abstract type="html">The controller&apos;s userData supercedes the node&apos;s userData and can be used in the same way. You should never change this reference yourself!</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic, strong) NSMutableDictionary *userData</Declaration>
			
			<ReturnValue><Abstract type="html">The controller&apos;s userData supercedes the node&apos;s userData and can be used in the same way. You should never change this reference yourself!</Abstract></ReturnValue>
			<Anchor>//api/name/userData</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKNodeController/userData</TokenIdentifier>
			<Abstract type="html">The controller&apos;s userData supercedes the node&apos;s userData and can be used in the same way. You should never change this reference yourself!</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic, strong) NSMutableDictionary *userData</Declaration>
			
			<ReturnValue><Abstract type="html">The controller&apos;s userData supercedes the node&apos;s userData and can be used in the same way. You should never change this reference yourself!</Abstract></ReturnValue>
			<Anchor>//api/name/userData</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/setBehaviors:</TokenIdentifier>
			<Abstract type="html">The list of behaviors of the node.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) NSArray *behaviors</Declaration>
			
			<ReturnValue><Abstract type="html">The list of behaviors of the node.</Abstract></ReturnValue>
			<Anchor>//api/name/behaviors</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/behaviors</TokenIdentifier>
			<Abstract type="html">The list of behaviors of the node.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) NSArray *behaviors</Declaration>
			
			<ReturnValue><Abstract type="html">The list of behaviors of the node.</Abstract></ReturnValue>
			<Anchor>//api/name/behaviors</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKNodeController/behaviors</TokenIdentifier>
			<Abstract type="html">The list of behaviors of the node.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) NSArray *behaviors</Declaration>
			
			<ReturnValue><Abstract type="html">The list of behaviors of the node.</Abstract></ReturnValue>
			<Anchor>//api/name/behaviors</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/setModel:</TokenIdentifier>
			<Abstract type="html">The model object associated with this controller/node.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic) KKModel *model</Declaration>
			
			<ReturnValue><Abstract type="html">The model object associated with this controller/node.</Abstract></ReturnValue>
			<Anchor>//api/name/model</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/model</TokenIdentifier>
			<Abstract type="html">The model object associated with this controller/node.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic) KKModel *model</Declaration>
			
			<ReturnValue><Abstract type="html">The model object associated with this controller/node.</Abstract></ReturnValue>
			<Anchor>//api/name/model</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKNodeController/model</TokenIdentifier>
			<Abstract type="html">The model object associated with this controller/node.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic) KKModel *model</Declaration>
			
			<ReturnValue><Abstract type="html">The model object associated with this controller/node.</Abstract></ReturnValue>
			<Anchor>//api/name/model</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/setPaused:</TokenIdentifier>
			<Abstract type="html">If the controller is paused, the behaviors will stop receiving updates. Behaviors receiving events should
also check the controller&apos;s paused state to ensure they don&apos;t process/forward events while paused.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL paused</Declaration>
			
			<ReturnValue><Abstract type="html">The current paused status.</Abstract></ReturnValue>
			<Anchor>//api/name/paused</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/paused</TokenIdentifier>
			<Abstract type="html">If the controller is paused, the behaviors will stop receiving updates. Behaviors receiving events should
also check the controller&apos;s paused state to ensure they don&apos;t process/forward events while paused.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL paused</Declaration>
			
			<ReturnValue><Abstract type="html">The current paused status.</Abstract></ReturnValue>
			<Anchor>//api/name/paused</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKNodeController/paused</TokenIdentifier>
			<Abstract type="html">If the controller is paused, the behaviors will stop receiving updates. Behaviors receiving events should
also check the controller&apos;s paused state to ensure they don&apos;t process/forward events while paused.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>@property (atomic) BOOL paused</Declaration>
			
			<ReturnValue><Abstract type="html">The current paused status.</Abstract></ReturnValue>
			<Anchor>//api/name/paused</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/KKNodeController/controllerWithBehaviors:</TokenIdentifier>
			<Abstract type="html">Creates a controller with a list of behaviors.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>+ (id)controllerWithBehaviors:(NSArray *)behaviors</Declaration>
			<Parameters>
				<Parameter>
					<Name>behaviors</Name>
					<Abstract type="html">An array containing KKBehavior objects.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new instance.</Abstract></ReturnValue>
			<Anchor>//api/name/controllerWithBehaviors:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/initWithBehaviors:</TokenIdentifier>
			<Abstract type="html">Creates a controller with a list of behaviors.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (id)initWithBehaviors:(NSArray *)behaviors</Declaration>
			<Parameters>
				<Parameter>
					<Name>behaviors</Name>
					<Abstract type="html">An array containing KKBehavior objects.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new instance.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithBehaviors:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/addBehavior:</TokenIdentifier>
			<Abstract type="html">Adds a behavior.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (void)addBehavior:(KKBehavior *)behavior</Declaration>
			<Parameters>
				<Parameter>
					<Name>behavior</Name>
					<Abstract type="html">The behavior to add.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addBehavior:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/addBehavior:withKey:</TokenIdentifier>
			<Abstract type="html">Adds a behavior with key.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (void)addBehavior:(KKBehavior *)behavior withKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>behavior</Name>
					<Abstract type="html">The behavior to add.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">The behavior&apos;s uniquely identifying key.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addBehavior:withKey:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/addBehaviors:</TokenIdentifier>
			<Abstract type="html">Adds a list of behaviors.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (void)addBehaviors:(NSArray *)behaviors</Declaration>
			<Parameters>
				<Parameter>
					<Name>behaviors</Name>
					<Abstract type="html">An array containing KKBehavior objects.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addBehaviors:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/behaviorForKey:</TokenIdentifier>
			<Abstract type="html">A key uniquely identifying the behavior.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (id)behaviorForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A key uniquely identifying the behavior.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The behavior for the key or nil if there is no behavior with that key.</Abstract></ReturnValue>
			<Anchor>//api/name/behaviorForKey:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/behaviorKindOfClass:</TokenIdentifier>
			<Abstract type="html">The class uniquely identifying the behavior.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (id)behaviorKindOfClass:(Class)behaviorClass</Declaration>
			<Parameters>
				<Parameter>
					<Name>behaviorClass</Name>
					<Abstract type="html">The class uniquely identifying the behavior.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The first found behavior being a kind of class or nil if there is no behavior with that class.</Abstract></ReturnValue>
			<Anchor>//api/name/behaviorKindOfClass:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/behaviorMemberOfClass:</TokenIdentifier>
			<Abstract type="html">The class uniquely identifying the behavior.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (id)behaviorMemberOfClass:(Class)behaviorClass</Declaration>
			<Parameters>
				<Parameter>
					<Name>behaviorClass</Name>
					<Abstract type="html">The class uniquely identifying the behavior.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The first found behavior being a member of the class or nil if there is no behavior with that class.</Abstract></ReturnValue>
			<Anchor>//api/name/behaviorMemberOfClass:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/hasBehaviors</TokenIdentifier>
			<Abstract type="html">YES if the controller has one or more behaviors.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (BOOL)hasBehaviors</Declaration>
			
			<ReturnValue><Abstract type="html">YES if the controller has one or more behaviors.</Abstract></ReturnValue>
			<Anchor>//api/name/hasBehaviors</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/removeBehavior:</TokenIdentifier>
			<Abstract type="html">Removes a specific behavior. Does nothing if the behavior isn&apos;t in the list.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (void)removeBehavior:(KKBehavior *)behavior</Declaration>
			<Parameters>
				<Parameter>
					<Name>behavior</Name>
					<Abstract type="html">The behavior to remove</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeBehavior:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/removeBehaviorForKey:</TokenIdentifier>
			<Abstract type="html">Removes a specific behavior by key. Does nothing if there&apos;s no behavior with this key in the list.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (void)removeBehaviorForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">The key uniquely identifying the behavior to remove.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeBehaviorForKey:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/removeBehaviorWithClass:</TokenIdentifier>
			<Abstract type="html">Removes a specific behavior by class. Does nothing if there&apos;s no behavior being a member of the class in the list.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (void)removeBehaviorWithClass:(Class)behaviorClass</Declaration>
			<Parameters>
				<Parameter>
					<Name>behaviorClass</Name>
					<Abstract type="html">The behavior class to remove.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeBehaviorWithClass:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/removeAllBehaviors</TokenIdentifier>
			<Abstract type="html">Removes all behaviors from the controller.</Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (void)removeAllBehaviors</Declaration>
			
			
			<Anchor>//api/name/removeAllBehaviors</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/isEqualToController:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (BOOL)isEqualToController:(KKNodeController *)controller</Declaration>
			
			
			<Anchor>//api/name/isEqualToController:</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/willRemoveController</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (void)willRemoveController</Declaration>
			
			
			<Anchor>//api/name/willRemoveController</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/nodeDidMoveToParent</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (void)nodeDidMoveToParent</Declaration>
			
			
			<Anchor>//api/name/nodeDidMoveToParent</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKNodeController/nodeWillMoveFromParent</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>KKNodeController.h</DeclaredIn>
			
			<Declaration>- (void)nodeWillMoveFromParent</Declaration>
			
			
			<Anchor>//api/name/nodeWillMoveFromParent</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
        
	</File>
</Tokens>