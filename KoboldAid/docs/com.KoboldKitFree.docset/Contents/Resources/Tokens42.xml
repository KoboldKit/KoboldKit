<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/KKTilemapTileset.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/KKTilemapTileset</TokenIdentifier>
			<Abstract type="html">TMX Tileset contains all the tileset data, most importantly the tileset image file and tile properties.
   Also holds a reference to the tileset texture after it has been loaded. Accessing the texture property will load the texture. </Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
            
			
			<NodeRef refid="42"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setTilemap:</TokenIdentifier>
			<Abstract type="html">Reference to the owning KTTilemap object. Mainly for internal use.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, weak) KKTilemap *tilemap</Declaration>
			
			
			<Anchor>//api/name/tilemap</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/tilemap</TokenIdentifier>
			<Abstract type="html">Reference to the owning KTTilemap object. Mainly for internal use.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, weak) KKTilemap *tilemap</Declaration>
			
			
			<Anchor>//api/name/tilemap</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/tilemap</TokenIdentifier>
			<Abstract type="html">Reference to the owning KTTilemap object. Mainly for internal use.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, weak) KKTilemap *tilemap</Declaration>
			
			
			<Anchor>//api/name/tilemap</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setName:</TokenIdentifier>
			<Abstract type="html">The name of the tileset. TILED-EDITABLE</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, copy) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/name</TokenIdentifier>
			<Abstract type="html">The name of the tileset. TILED-EDITABLE</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, copy) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/name</TokenIdentifier>
			<Abstract type="html">The name of the tileset. TILED-EDITABLE</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, copy) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setImageFile:</TokenIdentifier>
			<Abstract type="html">The image file without the path. Assumes the image file is in bundle&apos;s root folder.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *imageFile</Declaration>
			
			
			<Anchor>//api/name/imageFile</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/imageFile</TokenIdentifier>
			<Abstract type="html">The image file without the path. Assumes the image file is in bundle&apos;s root folder.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *imageFile</Declaration>
			
			
			<Anchor>//api/name/imageFile</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/imageFile</TokenIdentifier>
			<Abstract type="html">The image file without the path. Assumes the image file is in bundle&apos;s root folder.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *imageFile</Declaration>
			
			
			<Anchor>//api/name/imageFile</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setAlternateTileset:</TokenIdentifier>
			<Abstract type="html">Points to the alternate tileset, used to draw tiles of this tileset from a different texture. Set by calling replaceTileset:withTileset: on KTTilemap.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) KKTilemapTileset *alternateTileset</Declaration>
			
			
			<Anchor>//api/name/alternateTileset</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/alternateTileset</TokenIdentifier>
			<Abstract type="html">Points to the alternate tileset, used to draw tiles of this tileset from a different texture. Set by calling replaceTileset:withTileset: on KTTilemap.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) KKTilemapTileset *alternateTileset</Declaration>
			
			
			<Anchor>//api/name/alternateTileset</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/alternateTileset</TokenIdentifier>
			<Abstract type="html">Points to the alternate tileset, used to draw tiles of this tileset from a different texture. Set by calling replaceTileset:withTileset: on KTTilemap.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) KKTilemapTileset *alternateTileset</Declaration>
			
			
			<Anchor>//api/name/alternateTileset</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setFirstGid:</TokenIdentifier>
			<Abstract type="html">The first GID in this tileset. It&apos;s the top-left tile in the tileset.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) KKGID firstGid</Declaration>
			
			
			<Anchor>//api/name/firstGid</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/firstGid</TokenIdentifier>
			<Abstract type="html">The first GID in this tileset. It&apos;s the top-left tile in the tileset.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) KKGID firstGid</Declaration>
			
			
			<Anchor>//api/name/firstGid</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/firstGid</TokenIdentifier>
			<Abstract type="html">The first GID in this tileset. It&apos;s the top-left tile in the tileset.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) KKGID firstGid</Declaration>
			
			
			<Anchor>//api/name/firstGid</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setLastGid:</TokenIdentifier>
			<Abstract type="html">The last GID in this tileset. It&apos;s the bottom-most, right-most tile in the tileset.
   Caution: lastGid is only valid after the tileset texture has been loaded. It will be 0 before that. </Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) KKGID lastGid</Declaration>
			
			
			<Anchor>//api/name/lastGid</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/lastGid</TokenIdentifier>
			<Abstract type="html">The last GID in this tileset. It&apos;s the bottom-most, right-most tile in the tileset.
   Caution: lastGid is only valid after the tileset texture has been loaded. It will be 0 before that. </Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) KKGID lastGid</Declaration>
			
			
			<Anchor>//api/name/lastGid</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/lastGid</TokenIdentifier>
			<Abstract type="html">The last GID in this tileset. It&apos;s the bottom-most, right-most tile in the tileset.
   Caution: lastGid is only valid after the tileset texture has been loaded. It will be 0 before that. </Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) KKGID lastGid</Declaration>
			
			
			<Anchor>//api/name/lastGid</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setTilesPerRow:</TokenIdentifier>
			<Abstract type="html">How many tiles per row are in this tileset.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) unsigned int tilesPerRow</Declaration>
			
			
			<Anchor>//api/name/tilesPerRow</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/tilesPerRow</TokenIdentifier>
			<Abstract type="html">How many tiles per row are in this tileset.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) unsigned int tilesPerRow</Declaration>
			
			
			<Anchor>//api/name/tilesPerRow</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/tilesPerRow</TokenIdentifier>
			<Abstract type="html">How many tiles per row are in this tileset.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) unsigned int tilesPerRow</Declaration>
			
			
			<Anchor>//api/name/tilesPerRow</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setTilesPerColumn:</TokenIdentifier>
			<Abstract type="html">How many tiles per column are in this tileset.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) unsigned int tilesPerColumn</Declaration>
			
			
			<Anchor>//api/name/tilesPerColumn</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/tilesPerColumn</TokenIdentifier>
			<Abstract type="html">How many tiles per column are in this tileset.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) unsigned int tilesPerColumn</Declaration>
			
			
			<Anchor>//api/name/tilesPerColumn</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/tilesPerColumn</TokenIdentifier>
			<Abstract type="html">How many tiles per column are in this tileset.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) unsigned int tilesPerColumn</Declaration>
			
			
			<Anchor>//api/name/tilesPerColumn</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setSpacing:</TokenIdentifier>
			<Abstract type="html">How much space (in points) is between individual tiles. If there&apos;s a spacing of 2, there will be a spacing of 2 points
   (4 pixels for -hd tileset images) between two adjacent tiles. Spacing is the same for both horizontal and vertical. </Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) int spacing</Declaration>
			
			
			<Anchor>//api/name/spacing</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/spacing</TokenIdentifier>
			<Abstract type="html">How much space (in points) is between individual tiles. If there&apos;s a spacing of 2, there will be a spacing of 2 points
   (4 pixels for -hd tileset images) between two adjacent tiles. Spacing is the same for both horizontal and vertical. </Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) int spacing</Declaration>
			
			
			<Anchor>//api/name/spacing</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/spacing</TokenIdentifier>
			<Abstract type="html">How much space (in points) is between individual tiles. If there&apos;s a spacing of 2, there will be a spacing of 2 points
   (4 pixels for -hd tileset images) between two adjacent tiles. Spacing is the same for both horizontal and vertical. </Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) int spacing</Declaration>
			
			
			<Anchor>//api/name/spacing</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setMargin:</TokenIdentifier>
			<Abstract type="html">The margin defines how much spacing (in points) there is from the texture border to the first tile. Margin is the same for both horizontal and vertical.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) int margin</Declaration>
			
			
			<Anchor>//api/name/margin</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/margin</TokenIdentifier>
			<Abstract type="html">The margin defines how much spacing (in points) there is from the texture border to the first tile. Margin is the same for both horizontal and vertical.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) int margin</Declaration>
			
			
			<Anchor>//api/name/margin</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/margin</TokenIdentifier>
			<Abstract type="html">The margin defines how much spacing (in points) there is from the texture border to the first tile. Margin is the same for both horizontal and vertical.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) int margin</Declaration>
			
			
			<Anchor>//api/name/margin</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setDrawOffset:</TokenIdentifier>
			<Abstract type="html">Drawing offset determines placement of tiles relative to the tile&apos;s origin. Can be used if tileset should not align with the grid but offset by a certain
   distance from the grid. TILED-EDITABLE </Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) CGPoint drawOffset</Declaration>
			
			
			<Anchor>//api/name/drawOffset</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/drawOffset</TokenIdentifier>
			<Abstract type="html">Drawing offset determines placement of tiles relative to the tile&apos;s origin. Can be used if tileset should not align with the grid but offset by a certain
   distance from the grid. TILED-EDITABLE </Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) CGPoint drawOffset</Declaration>
			
			
			<Anchor>//api/name/drawOffset</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/drawOffset</TokenIdentifier>
			<Abstract type="html">Drawing offset determines placement of tiles relative to the tile&apos;s origin. Can be used if tileset should not align with the grid but offset by a certain
   distance from the grid. TILED-EDITABLE </Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) CGPoint drawOffset</Declaration>
			
			
			<Anchor>//api/name/drawOffset</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setTileSize:</TokenIdentifier>
			<Abstract type="html">The size of tiles (in points).</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) CGSize tileSize</Declaration>
			
			
			<Anchor>//api/name/tileSize</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/tileSize</TokenIdentifier>
			<Abstract type="html">The size of tiles (in points).</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) CGSize tileSize</Declaration>
			
			
			<Anchor>//api/name/tileSize</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/tileSize</TokenIdentifier>
			<Abstract type="html">The size of tiles (in points).</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic) CGSize tileSize</Declaration>
			
			
			<Anchor>//api/name/tileSize</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setTexture:</TokenIdentifier>
			<Abstract type="html">The texture used by this tileset. If this property is accessed while it&apos;s still nil, it will load the texture.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) SKTexture *texture</Declaration>
			
			
			<Anchor>//api/name/texture</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/texture</TokenIdentifier>
			<Abstract type="html">The texture used by this tileset. If this property is accessed while it&apos;s still nil, it will load the texture.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) SKTexture *texture</Declaration>
			
			
			<Anchor>//api/name/texture</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/texture</TokenIdentifier>
			<Abstract type="html">The texture used by this tileset. If this property is accessed while it&apos;s still nil, it will load the texture.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) SKTexture *texture</Declaration>
			
			
			<Anchor>//api/name/texture</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setTileTextures:</TokenIdentifier>
			<Abstract type="html">The textures for each tile in the tileset. The index of a texture for a specific gid is obtained by subtracting firstGid from gid: textureIndes = gid - firstGid</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) NSArray *tileTextures</Declaration>
			
			
			<Anchor>//api/name/tileTextures</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/tileTextures</TokenIdentifier>
			<Abstract type="html">The textures for each tile in the tileset. The index of a texture for a specific gid is obtained by subtracting firstGid from gid: textureIndes = gid - firstGid</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) NSArray *tileTextures</Declaration>
			
			
			<Anchor>//api/name/tileTextures</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/tileTextures</TokenIdentifier>
			<Abstract type="html">The textures for each tile in the tileset. The index of a texture for a specific gid is obtained by subtracting firstGid from gid: textureIndes = gid - firstGid</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) NSArray *tileTextures</Declaration>
			
			
			<Anchor>//api/name/tileTextures</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setProperties:</TokenIdentifier>
			<Abstract type="html">The tileset&apos;s properties. Properties for individual tiles are in tileProperties.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) KKTilemapProperties *properties</Declaration>
			
			
			<Anchor>//api/name/properties</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/properties</TokenIdentifier>
			<Abstract type="html">The tileset&apos;s properties. Properties for individual tiles are in tileProperties.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) KKTilemapProperties *properties</Declaration>
			
			
			<Anchor>//api/name/properties</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/properties</TokenIdentifier>
			<Abstract type="html">The tileset&apos;s properties. Properties for individual tiles are in tileProperties.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) KKTilemapProperties *properties</Declaration>
			
			
			<Anchor>//api/name/properties</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/setTileProperties:</TokenIdentifier>
			<Abstract type="html">Contains each tile&apos;s properties. Properties for the tileset itself are in properties.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) KKTilemapTileProperties *tileProperties</Declaration>
			
			
			<Anchor>//api/name/tileProperties</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/tileProperties</TokenIdentifier>
			<Abstract type="html">Contains each tile&apos;s properties. Properties for the tileset itself are in properties.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) KKTilemapTileProperties *tileProperties</Declaration>
			
			
			<Anchor>//api/name/tileProperties</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/KKTilemapTileset/tileProperties</TokenIdentifier>
			<Abstract type="html">Contains each tile&apos;s properties. Properties for the tileset itself are in properties.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly) KKTilemapTileProperties *tileProperties</Declaration>
			
			
			<Anchor>//api/name/tileProperties</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/textureForGid:</TokenIdentifier>
			<Abstract type="html">Gets the texture of a tile GID from this tileset.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>- (SKTexture *)textureForGid:(KKGID)gid</Declaration>
			<Parameters>
				<Parameter>
					<Name>gid</Name>
					<Abstract type="html">The tile gid whose texture should be returned.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The texture for a specific GID, or nil if the gid is not in this tileset.</Abstract></ReturnValue>
			<Anchor>//api/name/textureForGid:</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/KKTilemapTileset/textureForGidWithoutFlags:</TokenIdentifier>
			<Abstract type="html">Gets the texture of a tile GID from this tileset. Gid must not have any flags set.</Abstract>
			<DeclaredIn>KKTilemapTileset.h</DeclaredIn>
			
			<Declaration>- (SKTexture *)textureForGidWithoutFlags:(KKGID)gidWithoutFlags</Declaration>
			<Parameters>
				<Parameter>
					<Name>gid</Name>
					<Abstract type="html">The tile gid without flags whose texture should be returned.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The texture for a specific GID, or nil if the gid is not in this tileset.</Abstract></ReturnValue>
			<Anchor>//api/name/textureForGidWithoutFlags:</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
        
	</File>
</Tokens>